name: Bundle Signer CI

on: [ push ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build with Maven
        run: |
          mvn clean compile package shade:shade
          cp target/original-bundlesigner*.jar .github/workflows/test_resources/bundlesigner.jar

      - uses: actions/upload-artifact@v2
        with:
          name: test_resources
          path: .github/workflows/test_resources/

  test-generate-sign-file:
    strategy:
      max-parallel: 12
      matrix:
        java-version: [ '8', '9', '10','11', '12','13','14', '15','16', '17' ,'18' ,'19' ]
        os: [ 'ubuntu-latest', 'macos-latest', 'windows-latest' ]
    needs: build
    runs-on: [ ARM64 ,x64 ]

    steps:

      - name: Download test resources
        uses: actions/download-artifact@v2
        with:
          name: test_resources

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'adopt'

      - if: ${{ matrix.os != 'windows-latest' }}
        name: Generate sign file on unix based os
        run: |
          java -jar bundlesigner.jar genbin --bundle bundle.aab --bin . --key key.pk8 --cert cert.pem --v2-signing-enabled true --v3-signing-enabled false
          (ls bundle.bin && >> /dev/null 2>&1 && echo bin file generated) || exit 1
          mkdir sign_file
          mv bundle.bin sign_file/${{ matrix.java-version }}_${{ matrix.os }}.bin


      - if: ${{ matrix.os == 'windows-latest' }}
        name: Generate sign file on windows
        run: |
          java -jar bundlesigner.jar genbin --bundle bundle.aab --bin . --key key.pk8 --cert cert.pem --v2-signing-enabled true --v3-signing-enabled true
          [System.IO.File]::Exists("bundle.bin") ? "echo bin file generated" : "exit 1"
          mkdir sign_file
          MOVE bundle.bin sign_file\${{ matrix.java-version }}_${{ matrix.os }}.bin

      - uses: actions/upload-artifact@v2
        with:
          name: sign_file
          path: sign_file/


  test-sign-bundle:
    strategy:
      max-parallel: 12
      matrix:
        java-version: [ '8', '17' ]
        os: [ 'ubuntu-latest' ]
    needs: test-generate-sign-file
    runs-on: ${{ matrix.os }}

    steps:

      - name: Download sign info
        uses: actions/download-artifact@v2
        with:
          name: sign_file

      - name: Download test resources
        uses: actions/download-artifact@v2
        with:
          name: test_resources

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'adopt'

      - if: ${{ matrix.java-version != '17' }}
        name: Generate sign file generated using Java < 17
        run: |
          rm 17_*
          for bin_file in *.bin ; do java -jar bundlesigner.jar signbundle --bundle bundle.aab --bin $bin_file --out result && java -jar bundlesigner.jar verify -v result/universal.apk | head -2 | tail -1  && rm -r result ; done
          echo "signed bundle"

      - if: ${{ matrix.java-version == '17' }}
        name: Generate sign file generated using Java == 17
        run: |
          mkdir bin_files
          cp 17_* bin_files/
          for bin_file in bin_files/*.bin ; do  java -jar bundlesigner.jar signbundle --bundle bundle.aab --bin $bin_file --out result && rm -r result ; done
          echo "signed bundle"
